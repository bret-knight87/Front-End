{"version":3,"sources":["components /Header.js","components /Footer.js","components /SignInForm.js","components /CreateAccountForm.js","index.js","App.js"],"names":["GlobalStyles","createGlobalStyle","HeadContainer","styled","div","Title","h1","HeadNav","nav","Header","src","alt","href","className","to","Footer","footer","FooterNav","FooterMain","FormDiv","FormikSignInForm","withFormik","mapPropsToValues","props","username","password","validationSchema","Yup","shape","required","handleSubmit","values","setStatus","resetForm","axios","post","then","res","console","log","data","catch","err","response","errors","touched","status","document","title","useState","setSignIn","useEffect","signIn","htmlFor","id","type","name","email","FormikCreateAccountForm","min","setCreateAccount","createAccount","ReactDOM","render","exact","path","component","SignInForm","CreateAccountForm","getElementById"],"mappings":"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","file":"static/js/main.36273eef.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../App.css\";\nimport styled from \"styled-components\";\nimport { createGlobalStyle } from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst GlobalStyles = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css?family=Shadows+Into+Light&display=swap');\n  body {\n    font-family: 'Notable', sans-serif;\n  }\n`;\n\nconst HeadContainer = styled.div`\n  // border: 1px solid black;\n  display: flex;\n  background-color: #e9c46a;\n\n  @media (max-width: 800px) {\n    height: 20%;\n\n    img {\n      width: 25%;\n      height: auto;\n    }\n  }\n\n  @media (max-width: 500px) {\n    img {\n      display: none;\n    }\n`;\n\nconst Title = styled.h1`\n  color: #2a9d8f;\n  font-size: 5rem;\n  // border: solid;\n  margin-left: 3%;\n  margin-top: 3%;\n  font-family: \"Shadows Into Light\", cursive;\n\n  @media (max-width: 800px) {\n    font-size: calc(5rem - 1rem);\n  }\n\n  @media (max-width: 500px) {\n    margin: auto;\n  }\n`;\n\nconst HeadNav = styled.nav`\n  // border: solid 1px;\n  display: flex;\n  justify-content: space-around;\n  margin-left: 40%;\n  height: 20%;\n  width: 10%;\n\n  @media (max-width: 800px) {\n    width: 12%;\n    font-size: 30%;\n    margin-left: 15%;\n    margin-top: 2%;\n  }\n\n  @media (max-width: 500px) {\n    width: 20%;\n    margin-top: 5%;\n  }\n\n`;\n\nexport default function Header() {\n  return (\n    <HeadContainer>\n      <GlobalStyles />\n      <img src=\"/imgs/trollmain.jpg\" alt=\"The SHN Troll!\"/>\n      <Title>SHN Trolls!</Title>\n      <HeadNav>\n        <p>\n        <a href=\"https://shnt3-splash.netlify.com/\" className=\"Foot-nav\">Home</a>\n        </p>\n        <p>|</p>\n        <p>\n        <Link to=\"/\" className=\"Foot-nav\">Log In</Link>\n        </p>\n      </HeadNav>\n    </HeadContainer>\n  );\n}\n","import React from \"react\";\nimport \"../App.css\";\nimport styled from \"styled-components\";\n\nconst Footer = styled.footer`\n  // border: 1px solid black;\n  display: flex;\n  background-color: #e9c46a;\n\n  @media (max-width: 800px) {\n    font-size: 55%;\n  }\n\n  @media (max-width: 500px) {\n    height: 5%;\n    display: flex;\n    align-items: center;\n`;\n\nconst FooterNav = styled.nav`\n  // border: 1px solid black;\n  margin-left: 25%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 15%;\n\n  @media (max-width: 800px) {\n    margin-left: 35%;\n  }\n\n  @media (max-width: 500px) {\n    width: 25%;\n    height: 55%;\n    margin-left: 35%;\n\n  }\n`;\n\nexport default function FooterMain() {\n  return (\n      <Footer>\n        <p className=\"Copyright\">&copy; 2020 SHNT!</p>\n        <FooterNav>\n          <p>\n            <a className=\"Foot-nav\" href=\"https://shnt3-splash.netlify.com/\">\n              Home\n            </a>\n          </p>\n          <p>|</p>\n          <p>\n            <a className=\"Foot-nav\" href=\"https://shnt3-splash.netlify.com/about.html\">\n              About\n            </a>\n          </p>\n          <p>|</p>\n          <p>\n            <a className=\"Foot-nav\" href=\"#contact\">\n              Contact\n            </a>\n          </p>\n        </FooterNav>\n      </Footer>\n  );\n}\n\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { withFormik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport \"../App.css\";\n\nconst FormDiv = styled.div`\n  width: 75%;\n  margin: auto;\n  height: 60vh;\n  padding: 1%;\n\n  hr {\n    border: solid 1px #264653;\n  }\n\n  p {\n    color: #264653;\n  }\n\n  .Form-error {\n    width: 20%;\n    margin: auto;\n    font-size: 0.7em;\n    color: red;\n\n    @media (max-width: 800px) {\n      width: 35%;\n    }\n  }\n`;\n\nconst SignInForm = ({ values, errors, touched, status }) => {\n  document.title = \"Sign In | SHNT\";\n\n  const [signIn, setSignIn] = useState([]);\n\n  useEffect(() => {\n    console.log(\"status has changed!\", status);\n    status && setSignIn(signIn => [...signIn, status]);\n  }, [status]);\n\n  return (\n    <FormDiv>\n      <Form>\n        <p>Username:</p>\n        <label htmlFor=\"username\">\n          <Field id=\"username\" type=\"text\" name=\"username\" className=\"form-field\" />\n          {touched.username && errors.username && (\n            <p className=\"Form-error\">{errors.username}</p>\n          )}\n        </label>\n        <p>Password:</p>\n        <label htmlFor=\"password\">\n          <Field\n            id=\"password\"\n            type=\"password\"\n            name=\"password\"\n            className=\"form-field\"\n          />\n          {touched.email && errors.password && (\n            <p className=\"Form-error\">{errors.password}</p>\n          )}\n        </label>\n        <br></br>\n        <button className=\"Button\" type=\"submit\">\n          Log In\n        </button>\n        <p>\n          <a href=\"#forgotpassword\" className=\"forgot\">\n            Forgot Password?\n          </a>\n        </p>\n        <br></br>\n      </Form>\n      <p>OR</p>\n      <hr />\n      <Link to=\"/createaccount\">\n        <button>Create Account</button>\n      </Link>\n    </FormDiv>\n  );\n};\n\nconst FormikSignInForm = withFormik({\n  mapPropsToValues(props) {\n    return {\n      username: props.username || \"\",\n      password: props.password || \"\",\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    username: Yup.string().required(\"Username is required!\"),\n    password: Yup.string().required(\"Password is required!\"),\n  }),\n\n  handleSubmit(values, { setStatus, resetForm }) {\n    axios\n      .post(\"https://salt-comments.herokuapp.com/api/auth/login\", values)\n      .then(res => {\n        console.log(res.data);\n        setStatus(res.data);\n        resetForm();\n      })\n      .catch(err => console.log(err.response));\n  },\n})(SignInForm);\n\nexport default FormikSignInForm;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { withFormik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport \"../App.css\";\n\nconst FormDiv = styled.div`\n  width: 75%;\n  margin: auto;\n  height: 60vh;\n\n  hr {\n    border: solid 1px #264653;\n  }\n\n  p {\n    color: #264653;\n  }\n\n  .Form-error {\n    width: 20%;\n    margin: auto;\n    font-size: 0.7em;\n    color: red;\n\n    @media (max-width: 800px) {\n      width: 35%;\n    }\n  }\n`;\n\nconst CreateAccountForm = ({ values, errors, touched, status }) => {\n  document.title = \"Create Account | SHNT\";\n\n  const [createAccount, setCreateAccount] = useState([]);\n\n  useEffect(() => {\n    console.log(\"status has changed!\", status);\n    status && setCreateAccount(createAccount => [...createAccount, status]);\n  }, [status]);\n\n  return (\n    <FormDiv>\n      <Form>\n        <p>Username:</p>\n        <label htmlFor=\"username\">\n          <Field id=\"username\" type=\"text\" name=\"username\" className=\"form-field\" />\n          {touched.username && errors.username && (\n            <p className=\"Form-error\">{errors.username}</p>\n          )}\n        </label>\n        <p>Password:</p>\n        <label htmlFor=\"password\">\n          <Field\n            id=\"password\"\n            type=\"password\"\n            name=\"password\"\n            className=\"form-field\"\n          />\n          {touched.password && errors.password && (\n            <p className=\"Form-error\">{errors.password}</p>\n          )}\n        </label>\n        {/* <p>Verify Password:</p>\n        <label htmlFor=\"verifypassword\">\n          <Field\n            id=\"verifypassword\"\n            type=\"password\"\n            name=\"verifypassword\"\n            className=\"form-field\"\n          />\n          {touched.verifypassword && errors.verifypassword && (\n            <p className=\"Form-error\">{errors.verifypassword}</p>\n          )}\n        </label> */}\n        <br></br>\n        <button type=\"submit\">Create Account</button>\n      </Form>\n      <Link to=\"/\">\n        <button className=\"back-to-signin\">Go Back to Sign In</button>\n      </Link>\n    </FormDiv>\n  );\n};\n\nconst FormikCreateAccountForm = withFormik({\n  mapPropsToValues(props) {\n    return {\n      username: props.username || \"\",\n      password: props.password || \"\",\n      // verifypassword: props.verifypassword || \"\",\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    username: Yup.string().required(\"Username is required!\"),\n    password: Yup.string().min(8, \"Password must be at least 8 characters!\").required(\"Password is required!\"),\n    // verifypassword: Yup.string()\n    //   .oneOf([Yup.ref(\"password\"), null], \"Passwords must match!\")\n    //   .required(\"Verify password is required!\")\n  }),\n\n  handleSubmit(values, { setStatus, resetForm }) {\n    axios\n      .post(\"https://salt-comments.herokuapp.com/api/auth/register\", values)\n      .then(console.log(values))\n      .then(res => {\n        console.log(\"success\", res);\n        setStatus(res.data)\n        resetForm();\n      })\n      .catch(err => console.log(err.response));\n  },\n})(CreateAccountForm);\n\nexport default FormikCreateAccountForm;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\"),\n);\n\n\n","import React from \"react\";\nimport \"./App.css\";\nimport { Route } from \"react-router-dom\";\nimport Header from \"./components /Header\"\nimport FooterMain from \"./components /Footer\";\nimport SignInForm from \"./components /SignInForm\";\nimport CreateAccountForm from \"./components /CreateAccountForm\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Route exact path=\"/\" component={SignInForm} />\n      <Route exact path=\"/createaccount\" component={CreateAccountForm} />\n      <FooterMain />  \n    </div>\n  );\n}\n\n"],"sourceRoot":""}